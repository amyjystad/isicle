conda { 
    conda.enabled = true 
    conda.cacheDir = ".env"  
}

process {
    conda = "/people/jyst649/.conda/envs/isicle"
}

account = 'NPMRD'
// Adduct resource requirements
a_name = 'adducts'
a_nodes = 1
a_ntasks_per_node = 2
a_time = "1:00:00"

// Conformers resource requirements
c_name = 'conformers'
c_nodes = 1
c_ntasks_per_node = 10
c_time = "12:00:00"

// DFT resource requirements
dft_name = 'dft'
dft_nodes = 1
dft_ntasks_per_node = 4
dft_time = "48:00:00"

// Mobility resource requirements
mobility_name = 'mobility'
mobility_nodes = 1
mobility_ntasks_per_node = 10
mobility_time = "2:00:00"

process {
    executor = 'slurm'
    queue = 'slurm'
    time = '1:00:00'
    clusterOptions = '-A NPMRD --job-name default -N 1 -n 5'

    withLabel: adducts {
        // Define resource requirements for process `adduct`
        errorStrategy = 'ignore'
        queue = 'shared,slurm,short'
        time = "${a_time}"
        clusterOptions = "-A NPMRD --job-name ${a_name} -N ${a_nodes} -n ${a_ntasks_per_node}"
    }
    withLabel: conformers {
        // Define resource requirements for process `conformer`
        errorStrategy = 'ignore'
        queue = 'shared,slurm'
        time = "${c_time}"
        clusterOptions = "-A ${account} --job-name ${c_name} -N ${c_nodes} -n ${c_ntasks_per_node}"
    }
    withLabel: dft {
        // Define resource requirements for process `dft`
        errorStrategy = 'ignore'
        queue = 'shared,slurm'
        time = "${dft_time}"
        clusterOptions = "-A ${account} --job-name ${dft_name} -N ${dft_nodes} -n ${dft_ntasks_per_node}"
    }
    withLabel: mobility {
        // Define resource requirements for process `mobility`
        errorStrategy = 'ignore'
        queue = 'slurm'
        time = "${mobility_time}"
        clusterOptions = "-A ${account} --job-name ${mobility_name} -N ${mobility_nodes} -n ${mobility_ntasks_per_node}"
    }
}

executor {
    $slurm {
        // Limit number of parallel SLURM jobs to 1000
        queueSize = 1000
    }
}

